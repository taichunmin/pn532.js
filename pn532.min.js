!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("lodash")):"function"==typeof define&&define.amd?define(["exports","lodash"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).Pn532={},t._)}(this,(function(t,e){"use strict";class r extends Uint8Array{constructor(...t){super(...t),this.dv=new DataView(this.buffer,this.byteOffset,this.length)}static fromView(t){if(!ArrayBuffer.isView(t))throw new TypeError("invalid view");return new r(t.buffer,t.byteOffset,t.byteLength)}static fromHex(t,e=!1){if(1&(t=t.replace(/[^0-9A-Fa-f]/g,"")).length)throw new TypeError("invalid hex string");const a=new r(t.length>>>1);for(let e=0;e<a.length;e++)a[e]=parseInt(t.substr(e<<1,2),16);return e&&a.reverse(),a}static fromUtf8(t){return r.fromView((new TextEncoder).encode(t))}static merge(...t){if(t.length<2)return t.length?t[0]:new r;const a=new r(e.sumBy(t,"length"));return e.reduce(t,((t,e)=>(a.set(e,t),t+e.length)),0),a}static isLen(t,a=null){return t instanceof r&&(e.isNil(a)||t.length===a)}isEqual(t){return r.isLen(t,this.length)&&this.every(((e,r)=>e===t[r]))}chunk(t){if(t<1)throw new TypeError("invalid bytesPerChunk");const e=[];for(let r=0;r<this.length;r+=t)e.push(this.subarray(r,r+t));return e}get xor(){return e.reduce(this,((t,e)=>t^e),0)}get hex(){return e.map(this,(t=>(t+256).toString(16).slice(-2))).join("").toUpperCase()}get rhex(){return e.map(this,(t=>(t+256).toString(16).slice(-2))).reverse().join("").toUpperCase()}get inspect(){return`Packet(${this.length}): ${e.map(this,(t=>(t+256).toString(16).slice(-2))).join(" ").toUpperCase()}`}get utf8(){return(new TextDecoder).decode(this)}get base64url(){const t=[];for(let r=0;r<this.length;r+=3){let a=0;for(let t=0;t<3;t++)a|=(r+t<this.length?this[r+t]:0)<<16-8*t;t.push(e.times(Math.min(this.length-r+1,4),(t=>"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"[a>>>18-6*t&63])).join(""))}return t.join("")}toJSON(){return this.length?`Packet(${this.length}): ${this.hex}`:"Packet(0)"}toString(){return this.toJSON()}dvGetter(t,e,r=!0){return e<0&&(e+=this.dv.byteLength),this.dv[t](e,r)}getBigInt64(...t){return this.dvGetter("getBigInt64",...t)}getBigUint64(...t){return this.dvGetter("getBigUint64",...t)}getFloat32(...t){return this.dvGetter("getFloat32",...t)}getFloat64(...t){return this.dvGetter("getFloat64",...t)}getInt16(...t){return this.dvGetter("getInt16",...t)}getInt32(...t){return this.dvGetter("getInt32",...t)}getInt8(...t){return this.dvGetter("getInt8",...t)}getUint16(...t){return this.dvGetter("getUint16",...t)}getUint32(...t){return this.dvGetter("getUint32",...t)}getUint8(...t){return this.dvGetter("getUint8",...t)}dvSetter(t,e,r,a=!0){return e<0&&(e+=this.dv.byteLength),this.dv[t](e,r,a),this}setBigInt64(...t){return this.dvSetter("setBigInt64",...t)}setBigUint64(...t){return this.dvSetter("setBigUint64",...t)}setFloat32(...t){return this.dvSetter("setFloat32",...t)}setFloat64(...t){return this.dvSetter("setFloat64",...t)}setInt16(...t){return this.dvSetter("setInt16",...t)}setInt32(...t){return this.dvSetter("setInt32",...t)}setInt8(...t){return this.dvSetter("setInt8",...t)}setUint16(...t){return this.dvSetter("setUint16",...t)}setUint32(...t){return this.dvSetter("setUint32",...t)}setUint8(...t){return this.dvSetter("setUint8",...t)}getUint24(t,e=!0){const[r,a]=e?[t+2,t]:[t,t+1];return this.getUint8(r)<<16|this.getUint16(a,e)}setUint24(t,e,r=!0){const[a,i]=r?[t+2,t]:[t,t+1];return this.setUint8(a,e>>>16&255),this.setUint16(i,65535&e,r),this}getInt24(t,e=!0){const r=this.getUint24(t,e);return r-(r>8388607?16777216:0)}setInt24(t,e,r=!0){return this.setUint24(t,16777215&e,r)}getBit(t,e=!1){return this[(t=7^(e?t:8*this.length-t-1))>>>3]>>>(7&t)&1}setBit(t,e,r=!1){return this[(t=7^(r?t:8*this.length-t-1))>>>3]>>>(7&t)&1^(e?1:0)&&(this[t>>>3]^=1<<(7&t)),this}}const a=t=>new Promise((e=>setTimeout(e,t)));class i extends Error{constructor(t){if(!(t instanceof Error))throw new TypeError("invalid err type");super(t.message),this.name=this.constructor.name,this.originalError=t,this.stack=`${this.stack}\n${t.stack}`}}const n=t=>{if(!e.isArray(t))throw new TypeError("Middleware stack must be an array!");if(e.some(t,(t=>!e.isFunction(t))))throw new TypeError("Middleware must be composed of functions!");return async(r={},a)=>{const i=[...t,...e.isFunction(a)?[a]:[]];if(!i.length)return;const n=e.times(i.length+1,(()=>0)),s=async t=>{if(0!==n[t])throw new Error(`middleware[${t}] called multiple times`);if(t>=i.length)n[t]=2;else try{n[t]=1;const e=await i[t](r,(()=>s(t+1)));if(1===n[t+1])throw new Error(`next() in middleware[${t}] should be awaited`);return n[t]=2,e}catch(e){throw n[t]=3,e.stack&&(e.stack=e.stack.replace(/at async dispatch[^\n]+\n[^\n]+\n\s*/g,"")),e}};return await s(0)}};var s=Object.freeze({__proto__:null,RethrownError:i,logTime:(...t)=>console.log(`[${(new Date).toTimeString().slice(0,8)}]`,...t),middlewareCompose:n,retry:async(t,e=3)=>{if(e<1)throw new TypeError("invalid times");let r=null;for(;e--;)try{return await t()}catch(t){r=t}throw new i(r)},sleep:a});const o=e.fromPairs(e.map([["01","Time Out, the target has not answered"],["02","A CRC error has been detected by the CIU"],["03","A Parity error has been detected by the CIU"],["04","During an anti-collision/select operation (ISO/IEC14443-3 Type A and ISO/IEC18092 106 kbps passive mode), an erroneous Bit Count has been detected"],["05","Framing error during Mifare operation"],["06","An abnormal bit-collision has been detected during bit wise anti-collision at 106 kbps"],["07","Communication buffer size insufficient"],["09","RF Buffer overflow has been detected by the CIU (bit BufferOvfl of the register CIU_Error)"],["0A","In active communication mode, the RF field has not been switched on in time by the counterpart (as defined in NFCIP-1 standard)"],["0B","RF Protocol error (description of the CIU_Error register)"],["0D","Temperature error: the internal temperature sensor has detected overheating, and therefore has automatically switched off the antenna drivers"],["0E","Internal buffer overflow"],["10","Invalid parameter (range, format, ...)"],["12","DEP Protocol: The PN532 configured in target mode does not support the command received from the initiator (the command received is not one of the following: ATR_REQ, WUP_REQ, PSL_REQ, DEP_REQ, DSL_REQ, RLS_REQ)"],["13","DEP Protocol, Mifare or ISO/IEC14443-4: The data format does not match to the specification. Depending on the RF protocol used, it can be: Bad length of RF received frame, Incorrect value of PCB or PFB, Invalid or unexpected RF received frame, NAD or DID incoherence."],["14","Mifare: Authentication error"],["23","ISO/IEC14443-3: UID Check byte is wrong"],["25","DEP Protocol: Invalid device state, the system is in a state which does not allow the operation"],["26","Operation not allowed in this configuration (host controller interface)"],["27","This command is not acceptable due to the current context of the PN532 (Initiator vs. Target, unknown target number, Target not in the good state, ...)"],["29","The PN532 configured as target has been released by its initiator"],["2A","PN532 and ISO/IEC14443-3B only: the ID of the card does not match, meaning that the expected card has been exchanged with another one."],["2B","PN532 and ISO/IEC14443-3B only: the card previously activated has disappeared."],["2C","Mismatch between the NFCID3 initiator and the NFCID3 target in DEP 212/424 kbps passive."],["2D","An over-current event has been detected"],["2E","NAD missing in DEP frame"]],(t=>[e.parseInt(t[0],16),t[1]]))),d=t=>{const r=63&t;if(!r)return null;const a=o[r]??`unknown error code: ${r}`;return e.set(new Error(`${a}, nad = ${128&t?1:0}, mi = ${64&t?1:0}`,"data.status",t))};class h{constructor(t){if(!r.isLen(t))throw new TypeError("invalid pack type");this.pack=t}static create(t){if(!r.isLen(t))throw new TypeError("invalid pack type");return 6===t.length?new c(t):65535===t.getUint16(3)?new l(t):new u(t)}static bufFindOffsetLen(t){const e=t.indexOf(0,0,255);if(-1===e)return[-1,0];if((t=t.subarray(e)).length>=6&&0===t[5]){const r=t.getUint16(3);if(65280===r||255===r)return[e,6]}const r=t=>255&t;let a=0;return t.length>=8&&!r(t[3]+t[4])&&(a=t[3]+7),t.length>=11&&65535===t.getUint16(3)&&!r(t[5]+t[6]+t[7])&&(a=t.getUint16(5,!1)+10),[e,t.length>=a?a:0]}get cmd(){throw new Error("not implement")}get isAck(){throw new Error("not implement")}get tfi(){return 0}getFrameErr(){throw new Error("not implement")}getAppErr(){return e.includes([212,213],this.tfi)?null:new Error(o[this.tfi]??`unknown error code: ${this.tfi}`)}}class c extends h{getFrameErr(){try{const{pack:t}=this;if(6!==t.length||!e.includes([255,65280],t.getUint16(3)))throw new TypeError("invalid ack/nack");return null}catch(t){return t.message}}get isAck(){return 65280===this.pack.getUint16(3)}}class u extends h{constructor(t){super(t),this.data=t.subarray(7,t.length-2)}getFrameErr(){try{const{pack:t}=this;if(t.length<8||t.length!==t[3]+7)throw new TypeError("invalid pack length");if(t[3]+t[4]&255)throw new TypeError("invalid len and lcs");if(255&e.sumBy(t.subarray(5,t.length-1)))throw new TypeError("invalid dcs");return null}catch(t){return t.message}}get cmd(){return this.pack[6]}get tfi(){return this.pack[5]}}class l extends h{constructor(t){super(t),this.data=t.subarray(10,t.length-2)}getFrameErr(){try{const{pack:t}=this;if(t.length<11||t.length!==t.getUint16(5,!1)+10)throw new TypeError("invalid pack length");if(65535!==t.getUint16(3)||t[5]+t[6]+t[7]&255)throw new TypeError("invalid len and lcs");if(255&e.sumBy(t.subarray(8,t.length-1)))throw new TypeError("invalid dcs");return null}catch(t){return t.message}}get cmd(){return this.pack[9]}get tfi(){return this.pack[8]}}t.Packet=r,t.Pn532=class{constructor(){this.parameters=0,this.middlewares={},this.plugins=new Map,this.respBuf=[],this.rxBuf=new r,this.tx=null,this.rx=new TransformStream({transform:(t,e)=>{for(this.rxBuf=r.merge(this.rxBuf,t);;){const[t,r]=h.bufFindOffsetLen(this.rxBuf);if(r<1)return;e.enqueue(h.create(this.rxBuf.slice(t,t+r))),this.rxBuf=this.rxBuf.slice(t+r)}}}),this.rx.readable.pipeTo(new WritableStream({write:t=>{this.respBuf.push(t)}}))}async use(t,a={}){if(!t||!e.isFunction(t.install)||!e.isString(t.name))throw new TypeError("property plugin.name and method plugin.install is required.");const i=`$${t.name}`;if(this.hasPlugin(i))return this;const n=await t.install({Packet:r,pn532:this,utils:s},a);return e.isNil(n)||(this[i]=n),this.addPlugin(i,t),this}addPlugin(t,e){this.plugins.set(t,e)}hasPlugin(t){return this.plugins.has(t)}addMiddleware(t,r){if(!e.isString(t)||!t.length)throw new TypeError("key is required");if(!e.isFunction(r))throw new TypeError("middleware is required");e.isArray(this.middlewares[t])||(this.middlewares[t]=[]),this.middlewares[t].push(r)}async writePacket(t){const e=n([...this.middlewares.writePacket??[],async(t,e)=>{if(!r.isLen(t.pack))throw new TypeError("pack should be Packet");if(t.writer=this.tx?.writable?.getWriter?.(),!t.writer)throw new Error("Failed to getWriter(). Did you remember to use adapter plugin?");await t.writer.write(t.pack),t.writer.releaseLock()}]);return await e({pack:t})}async sendCommandNormal({cmd:t,data:e=new r}){if(!r.isLen(e))throw new TypeError("data should be Packet");if(e.byteLength>253)throw new TypeError("data.byteLength > 253");const a=new r(e.byteLength+9),i=e.byteLength+2;a.set(new r([255,i,-i,212,t]),2),e.byteLength&&a.set(e,7);const n=a.byteLength-2;a[n]=0;for(const t of a.subarray(5,n))a[n]-=t;await this.writePacket(a)}async sendCommandExtended({cmd:t,data:e=new r}){if(!r.isLen(e))throw new TypeError("data should be Packet");if(e.byteLength>65533)throw new TypeError("data.byteLength > 65533");const a=new r(e.byteLength+12),i=e.byteLength+2,[n,s]=[i>>>8,255&i];a.set(new r([255,255,255,n,s,-(n+s),212]),2),e.byteLength&&a.set(e,10);const o=a.byteLength-2;a[o]=0;for(const t of a.subarray(8,o))a[o]-=t;await this.writePacket(a)}async sendCommandWakeup(){await this.writePacket(r.fromHex("55550000000000000000000000000000FF05FBD4140114010200")),await this.readRespTimeout({cmd:21})}async resetSettings(){await this.setParameters(20),await this.updateRegistersWithMask([{adr:25346,mask:128,value:128},{adr:25347,mask:128,value:128},{adr:25357,mask:16,value:0},{adr:25400,mask:8,value:0},{adr:25405,mask:7,value:0}])}clearRespBuf(){this.respBuf.splice(0,this.respBuf.length)}async readRespTimeout({cmd:t=null,timeout:r=5e3,respValidator:i=null}){const s=n([...this.middlewares.skipRespLogger??[]]),o=n([...this.middlewares.readRespTimeout??[],async(t,r)=>{for(t.startedAt=Date.now();;){if(!this?.$adapter?.isOpen?.())throw new Error("device disconnected");if(t.nowts=Date.now(),t.nowts>t.startedAt+t.timeout)throw new Error(`readRespTimeout ${t.timeout}ms`);for(;this.respBuf.length;){const r=this.respBuf.shift();if(r.getFrameErr())await s({message:"invalid pn532 frame",resp:r});else if(r instanceof c){if(!r.isAck)throw new Error("receive nack");await s({message:"pn532 ack frame",resp:r})}else if(e.isNil(t.cmd)||r.cmd===t.cmd){if(!e.isFunction(i)||i(r))return r;await s({message:"respValidator return falsy",resp:r})}else await s({message:"unexpected resp.cmd",resp:r})}await a(10)}}]);return await o({cmd:t,timeout:r})}async diagnose({test:t=0,data:e=new r,timeout:a}={}){if(!r.isLen(e))throw new TypeError("data should be Packet");this.clearRespBuf(),await this.sendCommandNormal({cmd:0,data:new r([t,...e])});const i=await this.readRespTimeout({cmd:1,timeout:a}),n=d(i.data[0]);if(n)throw n;return i.data=i.data.subarray(1),i}async testCommunication(t="ping"){const{data:e}=await this.diagnose({test:0,data:r.fromUtf8(t)});return e.utf8===t}async testRom(){const{status:t}=await this.diagnose({test:1});return 0===t}async testRam(){const{status:t}=await this.diagnose({test:2});return 0===t}async testTargetPolling(t=1){const{status:e}=await this.diagnose({test:4,data:new r([t])});return e}async testTargetPresent(){const{status:t}=await this.diagnose({test:6});return t}async testSelfAntenna(){const{status:t}=await this.diagnose({test:7});return t}async getFirmwareVersion(){this.clearRespBuf(),await this.sendCommandNormal({cmd:2});const{data:t}=await this.readRespTimeout({cmd:3});return{firmware:`${t[1]}.${t[2]}`,ic:`PN5${t.subarray(0,1).hex}`,iso14443a:(1&t[3])>0,iso14443b:(2&t[3])>0,iso18092:(4&t[3])>0}}async readRegisters(t=[]){if(!e.isArray(t)||!t.length)throw new TypeError("invalid adrs");const a=new r(2*t.length);for(let e=0;e<t.length;e++)a.setUint16(2*e,t[e],!1);this.clearRespBuf(),await this.sendCommandNormal({cmd:6,data:a});const{data:i}=await this.readRespTimeout({cmd:7});return e.zipObject(t,i)}async writeRegisters(t){if(e.isPlainObject(t)&&(t=e.toPairs(t)),!e.isArray(t)||!t.length)throw new TypeError("invalid regs");const a=new r(3*t.length);for(let r=0;r<t.length;r++)a.setUint16(3*r,e.parseInt(t?.[r]?.[0]??0),!1),a[3*r+2]=e.parseInt(t?.[r]?.[1]??0);this.clearRespBuf(),await this.sendCommandNormal({cmd:8,data:a}),await this.readRespTimeout({cmd:9})}async updateRegistersWithMask(t=[]){if(!e.isArray(t))throw new TypeError("invalid rows");if(!(t=e.filter(t,(t=>e.has(t,"adr")&&e.has(t,"mask")&&e.has(t,"value")))).length)throw new TypeError("invalid rows.length");const r=e.uniq(e.map(t,"adr")),a=await this.readRegisters(r);for(const e of t)a[e.adr]=a[e.adr]&(255^e.mask)|e.value&e.mask;await this.writeRegisters(a)}async readGpio(){this.clearRespBuf(),await this.sendCommandNormal({cmd:12});const{data:t}=await this.readRespTimeout({cmd:13});return e.fromPairs([...e.times(6,(e=>[`p3${e}`,t[0]>>>e&1])),...e.times(2,(e=>[`p7${e+1}`,t[1]>>>e+1&1])),...e.times(2,(e=>[`i${e}`,t[2]>>>e&1]))])}async writeGpio(t={}){const a=new r([0,0]);for(let r=0;r<6;r++)e.has(t[`p3${r}`])&&(a[0]|=128|(t[`p3${r}`]?1<<r:0));for(let r=1;r<3;r++)e.has(t[`p7${r}`])&&(a[1]|=128|(t[`p7${r}`]?1<<r:0));this.clearRespBuf(),await this.sendCommandNormal({cmd:14,data:a}),await this.readRespTimeout({cmd:15})}async setParameters(t){this.clearRespBuf(),t&=255,await this.sendCommandNormal({cmd:18,data:new r([t])}),await this.readRespTimeout({cmd:19}),this.parameters=t}async samConfiguration({mode:t=1,timeout:a=20,irq:i=null}={}){this.clearRespBuf(),e.isNil(i)||(i=i?1:0),await this.sendCommandNormal({cmd:20,data:new r([t,a,...e.isNil(i)?[]:[i]])}),await this.readRespTimeout({cmd:21})}async rfConfiguration({item:t,data:e=new r}={}){this.clearRespBuf(),await this.sendCommandNormal({cmd:50,data:new r([t,...e])}),await this.readRespTimeout({cmd:51})}async rfSetField({autoRfca:t=1,rfOnOff:e=0}={}){const a=new r(1);t&&(a[0]|=2),e&&(a[0]|=1),await this.rfConfiguration({item:1,data:a})}async rfSetTimeouts({atrres:t=11,retry:a=10}={}){if(!e.inRange(t,0,17))throw new TypeError("invalid atrres timeouts");if(!e.inRange(a,0,17))throw new TypeError("invalid retry timeouts");await this.rfConfiguration({item:2,data:new r([0,t,a])})}async rfSetMaxRetries({atr:t=255,psl:e=1,passiveActivation:a=255}={}){await this.rfConfiguration({item:5,data:new r([t,e,a])})}async inListPassiveTarget({maxTg:t=1,brTy:e=0,data:a=new r,timeout:i=3e4}={}){return this.clearRespBuf(),await this.sendCommandNormal({cmd:74,data:new r([t,e,...a])}),await this.readRespTimeout({cmd:75,timeout:i})}async inDataExchange({tg:t=1,data:e=new r,timeout:a,respValidator:i}={}){this.clearRespBuf(),await this.sendCommandNormal({cmd:64,data:new r([t,...e])});const n=await this.readRespTimeout({cmd:65,timeout:a,respValidator:i}),s=d(n.data[0]);if(s)throw s;return n.data=n.data.subarray(1),n}async inCommunicateThru({data:t=new r,timeout:e,respValidator:a}={}){this.clearRespBuf(),await this.sendCommandNormal({cmd:66,data:t});const i=await this.readRespTimeout({cmd:67,timeout:e,respValidator:a}),n=d(i.data[0]);if(n)throw n;return i.data=i.data.subarray(1),i}async inDeselect({tg:t=0}={}){if(e.isNil(t))throw new TypeError("invalid tg");this.clearRespBuf(),await this.sendCommandNormal({cmd:68,data:new r([t])});const a=await this.readRespTimeout({cmd:69}),i=d(a.data[0]);if(i)throw i;return a.data=a.data.subarray(1),a}async inRelease({tg:t=0}={}){if(e.isNil(t))throw new TypeError("invalid tg");this.clearRespBuf(),await this.sendCommandNormal({cmd:82,data:new r([t])});const a=await this.readRespTimeout({cmd:83}),i=d(a.data[0]);if(i)throw i;return a.data=a.data.subarray(1),a}async inSelect({tg:t}){if(!e.includes([1,2],t))throw new TypeError("invalid tg");this.clearRespBuf(),await this.sendCommandNormal({cmd:84,data:new r([t])});const a=await this.readRespTimeout({cmd:85}),i=d(a.data[0]);if(i)throw i;return a.data=a.data.subarray(1),a}async inAutoPoll({pollNr:t,period:a,types:i=[],timeout:n}={}){if(!e.isArray(i)||!i.length)throw new TypeError("invalid types");this.clearRespBuf(),await this.sendCommandNormal({cmd:96,data:new r([t,a,...i])});const s=await this.readRespTimeout({cmd:97});return s.nbTg=s.data[0],s.data=s.data.subarray(1),s}},t.utils=s,t.version="0.1.14"}));
